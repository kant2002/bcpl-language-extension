{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "BCPL",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#character"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.bcpl",
				"match": "\\b(and|abort|be|by|break|bit|byte|blank|case|compileif|compiletest|default|do|docase|eq|eqv|ext|endcase|external|for|false|finish|ge|gr|get|goto|if|ifso|ifnot|into|let|le|ls|lv|loop|logand|logor|lshift|manifest|ne|neg|nil|not|neqv|newname|numargs|or|offset|rv|return|resultis|repeat|repeatwhile|rem|rshift|repeatuntil|switchon|static|size|selecton|structure|to|test|then|true|table|unless|until|vec|valof|while|word|xor)\\b"
			}]
		},
		"comments": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.json.comments"
						}
					},
					"match": "(//).*$\\n?",
					"name": "comment.line.double-slash.js"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.bcpl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bcpl",
					"match": "\\*."
				}
			]
		},
		"character": {
			"name": "character.single.bcpl",
			"patterns": [
				{
					"name": "constant.character.single.bcpl",
					"match": "\\$[^*]"
				},
				{
					"name": "constant.character.single.escape.bcpl",
					"match": "\\$\\*."
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.octal.bcpl",
					"match": "#[1-9]{1,3}"
				},
				{
					"match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
					"name": "constant.numeric.decimal.bcpl"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.array.bcpl",
					"match": "!"
				},
				{
					"match": "<<|>>",
					"name": "keyword.operator.bitwise.shift.bcpl"
				}
			]
		}
	},
	"scopeName": "source.bcpl"
}